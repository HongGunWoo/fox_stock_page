{"version":3,"sources":["components/UserButton.js","screens/Login/index.js","screens/SignUp/index.js","screens/Home/StockItem.js","components/ListIndicator.js","screens/Home/StockItemDetail.js","components/TableHeader.js","components/FabUp.js","screens/Home/InterestTable.js","screens/Home/StockTable.js","screens/Home/index.js","screens/Guide/GuideItem.js","screens/Guide/index.js","screens/FindUserInfo/index.js","screens/FindUserInfo/FindPW.js","screens/FindUserInfo/FindID.js","screens/ChangePW/index.js","screens/SearchPage/index.js","navigations/StackNavigator.js","App.js"],"names":["styles","StyleSheet","create","button","marginBottom","borderRadius","padding","zIndex","UserButton","props","Button","style","mode","color","onPress","disabled","children","StatusBarHeight","Platform","OS","getStatusBarHeight","StatusBar","currentHeight","container","flex","backgroundColor","paddingHorizontal","paddingTop","headline","fontSize","marginStart","inputBox","findButton","height","helperText","marginTop","marginLeft","snackbar","Login","navigation","useNavigation","queryClient","useQueryClient","useState","email","setEmail","password","setPassword","checkLoginSuccess","setCheckLoginSuccess","mutate","useMutation","userInfo","axios","post","apiUrl","then","res","data","useEffect","setQueriesData","navigate","hasEmailError","test","KeyboardAvoidingView","behavior","keyboardVerticalOffset","ScrollView","TouchableWithoutFeedback","Keyboard","dismiss","View","Snackbar","visible","duration","wrapperStyle","alignSelf","onDismiss","Text","Headline","TextInput","left","Icon","name","placeholder","keyboardType","label","value","onChangeText","HelperText","type","secureTextEntry","LogBox","ignoreLogs","QuestionList","input","SignUp","setName","checkPassword","setCheckPassword","checkQuestion","setCheckQuestion","checkAnswer","setCheckAnswer","expanded","setExpanded","checkSuccess","setCheckSuccess","checkAnswerIdx","setCheckAnswerIdx","visibleError","setVisibleError","onSuccess","onError","hasPasswordError","Section","Accordion","title","map","content","idx","Item","undefined","stockItem","flexDirection","alignItems","justifyContent","memo","item","checkStar","handleOnPress","userEmail","iconName","setIconName","checkStock","setCheckStock","textAlign","length","substr","currentPrice","toString","replace","purchasePrice","expectedReturn","Math","round","IconButton","icon","Colors","yellow700","srtnCd","grey500","Divider","grey200","ListIndicator","ActivityIndicator","size","marginVertical","marginHorizontal","buttonClose","margin","graph","modalText","StockItemDetail","hideDetailModal","useQuery","get","isFetching","Subheading","marginRight","selectable","mrktCtg","bps","averageRoe","pbr","fontWeight","Image","resizeMode","source","uri","chart","info","tableHeader","headerContainer","infoText","infoIcon","modalView","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","modalHeader","right","top","itemModalContainer","TableHeader","setVisible","setTitle","setContent","coordX","setCoordX","coordY","setCoordY","showModal","useCallback","hideModal","Modal","transparent","onRequestClose","black","e","nativeEvent","pageX","pageY","scrollTopBtn","position","bottom","FabUp","scrollRef","FAB","current","scrollToOffset","animated","offset","InterestTable","isFocused","useIsFocused","useRef","itemVisible","setItemVisible","detailItem","setDetailItem","userLoading","isLoading","interestMutate","stockInfo","initalData","staleTime","Infinity","emailLoading","showDetailModal","_keyExtractor","index","_renderItem","Provider","FlatList","ref","keyExtractor","renderItem","PageList","StockTable","userInterest","setUserInterest","useInfiniteQuery","route","pageParam","getNextPageParam","lastPage","allPages","maxPage","totalPages","nextPage","hasNextPage","fetchNextPage","isFetchingNextPage","includes","_onEndReached","pages","page","flat","removeClippedSubviews","disableVirtualization","onEndReached","onEndReachedThreshold","ListFooterComponent","Tab","createMaterialTopTabNavigator","header","loginButton","Home","searchQuery","setSearchQuery","Searchbar","serachQuery","onIconPress","query","onSubmitEditing","toUpperCase","compact","Navigator","screenOptions","tabBarItemStyle","tabBarIndicatorStyle","Screen","component","contentContainer","paddingVertical","GuideItem","contentEnable","setContentEnable","iconChange","Title","Guide","FindUserInfo","minHeight","maxHeight","FindPW","FindID","id","setId","ChnagePW","newPassword","setNewPassword","queryText","borderBottomWidth","SearchPage","params","HomeTab","createMaterialBottomTabNavigator","Stack","createNativeStackNavigator","HomeStackScreen","initialRouteName","barStyle","options","tabBarIcon","MaterialCommunityIcons","StackNavigator","NavigationContainer","headerShown","ChangePW","onption","QueryClient","theme","DefaultTheme","dark","colors","priamry","accent","background","text","surface","onSurface","backdrop","notification","App","client"],"mappings":"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","file":"static/js/app.60680a28.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Button } from 'react-native-paper';\r\n\r\nconst styles = StyleSheet.create({\r\n\tbutton: {\r\n\t\tmarginBottom: 10,\r\n\t\tborderRadius: 20,\r\n\t\tpadding: 5,\r\n\t\tzIndex: -1\r\n\t},\r\n})\r\n\r\nconst UserButton = (props) => {\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tstyle={styles.button}\r\n\t\t\tmode='contained'\r\n\t\t\tcolor='#6937a1'\r\n\t\t\tonPress={props.onPress}\r\n\t\t\tdisabled={props.disabled}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default UserButton;","import React, { useEffect, useState } from 'react';\r\nimport { TextInput, Button, Headline, HelperText, Snackbar } from 'react-native-paper';\r\nimport { Keyboard, KeyboardAvoidingView, Platform, StatusBar, ScrollView, StyleSheet, Text, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport axios from 'axios';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\r\nimport UserButton from '../../components/UserButton';\r\n// import getEnvVars from '../../components/environment';\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\nconst StatusBarHeight = Platform.OS === 'ios' ? getStatusBarHeight(true) : StatusBar.currentHeight;\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 30,\r\n\t\tpaddingTop: 40,\r\n\t},\r\n\theadline: {\r\n\t\tfontSize: 30,\r\n\t\tmarginStart: 10\r\n\t},\r\n\tinputBox: {\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\tfindButton: {\r\n\t\tmarginBottom: 10,\r\n\t\tborderRadius: 20,\r\n\t\theight: 50,\r\n\t\tcolor: 'black',\r\n\t\tzIndex: -1,\r\n\t},\r\n\thelperText: {\r\n\t\tmarginTop: 0,\r\n\t\tmarginLeft: 20,\r\n\t},\r\n\tsnackbar: {\r\n\t\tbackgroundColor: 'black',\r\n\t\tzIndex: 100,\r\n\t},\r\n})\r\n\r\nconst Login = () => {\r\n\tconst navigation = useNavigation();\r\n\tconst queryClient = useQueryClient();\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [checkLoginSuccess, setCheckLoginSuccess] = useState(null);\r\n\r\n\tconst { mutate } = useMutation(\r\n\t\t['signIn'],\r\n\t\tasync (userInfo) => {\r\n\t\t\tconst url = `${apiUrl}/login`;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(url, userInfo)\r\n\t\t\t\t.then((res) => setCheckLoginSuccess(res.data))\r\n\t\t}\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkLoginSuccess) {\r\n\t\t\tqueryClient.setQueriesData(['userEmail'], email)\r\n\t\t\tnavigation.navigate('HomeStackScreen');\r\n\t\t}\r\n\t}, [checkLoginSuccess])\r\n\r\n\tconst hasEmailError = () => {\r\n\t\tvar reg = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n\t\treturn !reg.test(email);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAvoidingView\r\n\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n\t\t\tstyle={{ flex: 1 }}\r\n\t\t\tkeyboardVerticalOffset={StatusBarHeight + 44}\r\n\t\t>\r\n\t\t\t<ScrollView style={{ backgroundColor: 'white' }}>\r\n\t\t\t\t<TouchableWithoutFeedback onPress={Platform.OS === 'web' ? null : Keyboard.dismiss}>\r\n\t\t\t\t\t<View style={styles.container}>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\tstyle={styles.snackbar}\r\n\t\t\t\t\t\t\tvisible={checkLoginSuccess === false}\r\n\t\t\t\t\t\t\tduration={1000}\r\n\t\t\t\t\t\t\twrapperStyle={{\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\t\t\t\tsetCheckLoginSuccess(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t\t해당 정보를 찾을 수 없습니다.\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t<Headline style={styles.headline}>여우의</Headline>\r\n\t\t\t\t\t\t<Headline style={{ ...styles.headline, marginBottom: 10 }}>주식 레시피</Headline>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={{ ...styles.inputBox, marginBottom: 0 }}\r\n\t\t\t\t\t\t\tleft={<TextInput.Icon name=\"account\" />}\r\n\t\t\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\t\t\tkeyboardType='email-address'\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChangeText={(email) => setEmail(email)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<HelperText style={styles.helperText} type='error' visible={hasEmailError() && email !== ''}>\r\n\t\t\t\t\t\t\t이메일주소가 올바르지 않습니다.\r\n\t\t\t\t\t\t</HelperText>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.inputBox}\r\n\t\t\t\t\t\t\tleft={<TextInput.Icon name=\"lock\" />}\r\n\t\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChangeText={(password) => setPassword(password)}\r\n\t\t\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<UserButton\r\n\t\t\t\t\t\t\tdisabled={hasEmailError() || email === '' || password === ''}\r\n\t\t\t\t\t\t\tonPress={() => mutate({\r\n\t\t\t\t\t\t\t\t\"email\": email,\r\n\t\t\t\t\t\t\t\t\"password\": password,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t</UserButton>\r\n\t\t\t\t\t\t<UserButton\r\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('SignUp')}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t회원가입\r\n\t\t\t\t\t\t</UserButton>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstyle={styles.findButton}\r\n\t\t\t\t\t\t\tmode='text'\r\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('FindUserInfo')}\r\n\t\t\t\t\t\t\tcolor='#660099'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t아이디/비밀번호 찾기\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableWithoutFeedback>\r\n\t\t\t</ScrollView>\r\n\t\t</KeyboardAvoidingView>\r\n\r\n\t);\r\n};\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Keyboard, KeyboardAvoidingView, LogBox, Platform, ScrollView, StatusBar, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { Headline, HelperText, List, Snackbar, Text, TextInput } from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\r\n\r\nimport UserButton from '../../components/UserButton';\r\n// import getEnvVars from '../../components/environment';\r\n\r\nLogBox.ignoreLogs(['500']);\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\nconst StatusBarHeight = Platform.OS === 'ios' ? getStatusBarHeight(true) : StatusBar.currentHeight;\r\nconst QuestionList = ['내가 졸업한 초등학교는?', '내가 가장 아끼는 물건은?', '내가 가장 좋아하는 색깔은?', '내가 키우는 애완동물 이름은?']\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tpaddingTop: 40,\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 30,\r\n\t},\r\n\theadline: {\r\n\t\tfontSize: 30,\r\n\t\tmarginStart: 10\r\n\t},\r\n\tinput: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tmarginBottom: 5,\r\n\t},\r\n\tsnackbar: {\r\n\t\tbackgroundColor: 'black',\r\n\t\tzIndex: 100,\r\n\t},\r\n})\r\n\r\nconst SignUp = () => {\r\n\tconst navigation = useNavigation();\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [checkPassword, setCheckPassword] = useState('');\r\n\tconst [checkQuestion, setCheckQuestion] = useState('ID/PW를 찾기위한 질문을 골라주세요.')\r\n\tconst [checkAnswer, setCheckAnswer] = useState('');\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\tconst [checkSuccess, setCheckSuccess] = useState(false);\r\n\tconst [checkAnswerIdx, setCheckAnswerIdx] = useState();\r\n\tconst [visibleError, setVisibleError] = useState(false);\r\n\r\n\tconst { mutate } = useMutation(\r\n\t\t['signUp'],\r\n\t\tasync (userInfo) => {\r\n\t\t\tconst url = `${apiUrl}/signUp`;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(url, userInfo)\r\n\t\t\t\t.then((res) => setCheckSuccess(res.data));\r\n\t\t},\r\n\t\t{\r\n\t\t\tonSuccess: () => {\r\n\t\t\t\tsetCheckSuccess(true);\r\n\t\t\t},\r\n\t\t\tonError: () => {\r\n\t\t\t\tsetVisibleError(true);\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n\tconst hasEmailError = () => {\r\n\t\tvar reg = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n\t\treturn !reg.test(email);\r\n\t};\r\n\r\n\tconst hasPasswordError = () => {\r\n\t\treturn password === checkPassword\r\n\t}\r\n\r\n\treturn (\r\n\t\t<KeyboardAvoidingView\r\n\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n\t\t\tstyle={{ flex: 1 }}\r\n\t\t\tkeyboardVerticalOffset={StatusBarHeight + 44}\r\n\t\t>\r\n\t\t\t<ScrollView style={{ backgroundColor: 'white' }}>\r\n\t\t\t\t<TouchableWithoutFeedback onPress={Platform.OS === 'web' ? null : Keyboard.dismiss}>\r\n\t\t\t\t\t<View style={styles.container}>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\tstyle={styles.snackbar}\r\n\t\t\t\t\t\t\tvisible={checkSuccess}\r\n\t\t\t\t\t\t\twrapperStyle={{\r\n\t\t\t\t\t\t\t\talignSelf:'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tduration={1000}\r\n\t\t\t\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\t\t\t\tsetCheckSuccess(false);\r\n\t\t\t\t\t\t\t\tnavigation.navigate('Login');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={{color: 'white'}}>\r\n\t\t\t\t\t\t\t\t회원가입 완료!\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\tstyle={styles.snackbar}\r\n\t\t\t\t\t\t\tvisible={visibleError}\r\n\t\t\t\t\t\t\twrapperStyle={{\r\n\t\t\t\t\t\t\t\talignSelf:'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tduration={1000}\r\n\t\t\t\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\t\t\t\tsetVisibleError(false);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={{color: 'white'}}>\r\n\t\t\t\t\t\t\t\t이미 가입되어 있는 이메일입니다.\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t<Headline style={styles.headline}>\r\n\t\t\t\t\t\t\t여우의\r\n\t\t\t\t\t\t</Headline>\r\n\t\t\t\t\t\t<Headline style={styles.headline}>\r\n\t\t\t\t\t\t\t주식 레시피를\r\n\t\t\t\t\t\t</Headline>\r\n\t\t\t\t\t\t<Headline style={styles.headline}>\r\n\t\t\t\t\t\t\t받아볼까요?\r\n\t\t\t\t\t\t</Headline>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tlabel='이름'\r\n\t\t\t\t\t\t\tplaceholder='이름을 입력해주세요'\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChangeText={(name) => setName(name)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tlabel='E-mail'\r\n\t\t\t\t\t\t\tplaceholder='이메일을 입력해주세요'\r\n\t\t\t\t\t\t\tkeyboardType='email-address'\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChangeText={(email) => setEmail(email)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<HelperText type='error' visible={hasEmailError() && email !== ''}>\r\n\t\t\t\t\t\t\t이메일주소가 올바르지 않습니다.\r\n\t\t\t\t\t\t</HelperText>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tlabel='비밀번호'\r\n\t\t\t\t\t\t\tplaceholder='비밀번호를 입력해주세요'\r\n\t\t\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChangeText={(password) => setPassword(password)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={{ ...styles.input, marginBottom: 0 }}\r\n\t\t\t\t\t\t\tlabel='비밀번호 확인'\r\n\t\t\t\t\t\t\tplaceholder='다시 한번 입력해 입력해주세요'\r\n\t\t\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t\t\t\tvalue={checkPassword}\r\n\t\t\t\t\t\t\tonChangeText={(checkPassword) => setCheckPassword(checkPassword)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<HelperText type='error' visible={!hasPasswordError()}>\r\n\t\t\t\t\t\t\t비밀번호가 일치하지 않습니다.\r\n\t\t\t\t\t\t</HelperText>\r\n\r\n\t\t\t\t\t\t<List.Section>\r\n\t\t\t\t\t\t\t<List.Accordion\r\n\t\t\t\t\t\t\t\ttitle={checkQuestion}\r\n\t\t\t\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\t\t\t\tonPress={() => setExpanded(!expanded)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{QuestionList.map((content, idx) => {\r\n\t\t\t\t\t\t\t\t\treturn (<List.Item\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\ttitle={content}\r\n\t\t\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckQuestion(content);\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckAnswerIdx(idx);\r\n\t\t\t\t\t\t\t\t\t\t\tsetExpanded(false);\r\n\t\t\t\t\t\t\t\t\t\t}} />)\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</List.Accordion>\r\n\t\t\t\t\t\t</List.Section>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={{ ...styles.input, marginBottom: 30 }}\r\n\t\t\t\t\t\t\tlabel='답'\r\n\t\t\t\t\t\t\tplaceholder='선택한 질문에 대한 답을 입력해주세요.'\r\n\t\t\t\t\t\t\tvalue={checkAnswer}\r\n\t\t\t\t\t\t\tonChangeText={(checkAnswer) => setCheckAnswer(checkAnswer)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<UserButton\r\n\t\t\t\t\t\t\tdisabled={checkSuccess || name === '' || hasEmailError() || !hasPasswordError() || password === '' || checkAnswer === '' || checkAnswerIdx === undefined}\r\n\t\t\t\t\t\t\tonPress={() => mutate({\r\n\t\t\t\t\t\t\t\t\"name\": name,\r\n\t\t\t\t\t\t\t\t\"email\": email,\r\n\t\t\t\t\t\t\t\t\"password\": password,\r\n\t\t\t\t\t\t\t\t\"checkPassword\": checkPassword,\r\n\t\t\t\t\t\t\t\t\"userCheckQuestionNumber\": checkAnswerIdx,\r\n\t\t\t\t\t\t\t\t\"userCheckQuestionAnswer\": checkAnswer,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t회원가입\r\n\t\t\t\t\t\t</UserButton>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableWithoutFeedback>\r\n\t\t\t</ScrollView>\r\n\t\t</KeyboardAvoidingView>\r\n\t);\r\n};\r\n\r\nexport default SignUp;","import React, { memo, useEffect, useState } from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport { IconButton, Colors, Divider } from 'react-native-paper';\r\n\r\nconst styles = StyleSheet.create({\r\n\tstockItem: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n})\r\n\r\nconst StockItem = ({ item, checkStar, handleOnPress, userEmail, mutate }) => {\r\n\tconst [iconName, setIconName] = useState('star-outline')\r\n\tconst [checkStock, setCheckStock] = useState(checkStar);\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckStock ? setIconName('star') : setIconName('star-outline');\r\n\t}, [checkStock])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<View style={styles.stockItem}>\r\n\t\t\t\t<Text style={{ flex: 1.25, textAlign: 'center' }} onPress={() => handleOnPress(item)}>\r\n\t\t\t\t\t{item.item.name.length > 8 ? item.item.name.substr(0, 7) + '...' : item.item.name}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text style={{ flex: 1, textAlign: 'right' }} onPress={() => handleOnPress(item)}>{item.item.currentPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</Text>\r\n\t\t\t\t<Text style={{ flex: 1, textAlign: 'right' }} onPress={() => handleOnPress(item)}>{item.item.purchasePrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</Text>\r\n\t\t\t\t<Text style={{ flex: 0.8, textAlign: 'right' }} onPress={() => handleOnPress(item)}>\r\n\t\t\t\t\t{item.item.expectedReturn >= 1 ? Math.round(item.item.expectedReturn * 100 - 100) + '%' :\r\n\t\t\t\t\t\tMath.round((1 - item.item.expectedReturn) * -100) + '%'}\r\n\t\t\t\t</Text>\r\n\t\t\t\t{userEmail !== null ?\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ flex: 0.4 }}\r\n\t\t\t\t\t\ticon={iconName}\r\n\t\t\t\t\t\tcolor={Colors.yellow700}\r\n\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\tuserEmail !== null ?\r\n\t\t\t\t\t\t\t\tmutate({\r\n\t\t\t\t\t\t\t\t\t\"email\": userEmail,\r\n\t\t\t\t\t\t\t\t\t\"srtnCd\": item.item.srtnCd,\r\n\t\t\t\t\t\t\t\t\t\"checkStock\": checkStock,\r\n\t\t\t\t\t\t\t\t\t\"setCheckStock\": setCheckStock\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/> :\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tstyle={{ flex: 0.4 }}\r\n\t\t\t\t\t\ticon={iconName}\r\n\t\t\t\t\t\tcolor={Colors.grey500}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\r\n\t\t\t</View>\r\n\t\t\t<Divider style={{ backgroundColor: Colors.grey200 }} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default memo(StockItem);","import React from 'react';\r\nimport { ActivityIndicator } from 'react-native-paper';\r\n\r\nconst ListIndicator = () => {\r\n\treturn (\r\n\t\t<ActivityIndicator size={30} color='#6937a1' style={{marginVertical: 10}} />\r\n\t);\r\n};\r\n\r\nexport default ListIndicator;","import { useQuery } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { Image, ScrollView, StyleSheet, View } from 'react-native';\r\nimport { Divider, Headline, IconButton, Subheading, Text } from 'react-native-paper';\r\nimport ListIndicator from '../../components/ListIndicator';\r\n// import getEnvVars from '../../components/environment';\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#e9e9e9',\r\n\t\tmarginTop: 100,\r\n\t\tmarginBottom: 60,\r\n\t\tmarginHorizontal: 20,\r\n\t\tborderRadius: 10,\r\n\t\tpadding: 20,\r\n\t},\r\n\tbuttonClose: {\r\n\t\tmargin: 0,\r\n\t\tpadding: 0\r\n\t},\r\n\tgraph: {\r\n\t\tflex: 1,\r\n\t\tmarginVertical: 10\r\n\t},\r\n\tmodalText: {\r\n\t\tcolor: 'black'\r\n\t}\r\n})\r\n\r\nconst StockItemDetail = ({ item, hideDetailModal }) => {\r\n\r\n\tconst { data, isFetching } = useQuery(\r\n\t\t['stockDetail'],\r\n\t\tasync () => {\r\n\t\t\treturn await axios\r\n\t\t\t\t.get(`${apiUrl}/stock/detail?name=${item.item.name}&srtn_cd=${item.item.srtnCd}`)\r\n\t\t\t\t.then((res) => res.data);\r\n\t\t}\r\n\t)\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n\t\t\t\t{isFetching||!data ? <Subheading style={{ ...styles.modalText, flex: 1 }}>...</Subheading> :\r\n\t\t\t\t\t<Subheading style={{ ...styles.modalText, flex: 1 }}>{data.type}</Subheading>}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\ticon={'close'}\r\n\t\t\t\t\tstyle={styles.buttonClose}\r\n\t\t\t\t\tonPress={hideDetailModal}\r\n\t\t\t\t\tcolor='black'\r\n\t\t\t\t\tsize={20}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\r\n\t\t\t\t<Headline style={{ ...styles.modalText, marginRight: 10 }} selectable>{item.item.name}</Headline>\r\n\t\t\t\t<Subheading style={{ ...styles.modalText, marginRight: 10 }} selectable>{item.item.srtnCd}</Subheading>\r\n\t\t\t\t<Subheading style={styles.modalText} selectable>{item.item.mrktCtg}</Subheading>\r\n\t\t\t</View>\r\n\t\t\t<Divider style={{ backgroundColor: '#bababa', marginVertical: 10 }} />\r\n\t\t\t<View style={{ flexDirection: 'row' }}>\r\n\t\t\t\t<Text style={{ ...styles.modalText, marginRight: 10 }}>\r\n\t\t\t\t\tBPS: {item.item.bps.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text style={{ ...styles.modalText, marginRight: 10 }}>\r\n\t\t\t\t\tROE: {Math.round(item.item.averageRoe * 100 - 100)}%\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text style={styles.modalText}>PBR: {item.item.pbr}</Text>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ flexDirection: 'row' }}>\r\n\t\t\t\t<Text style={{ ...styles.modalText, marginRight: 10 }}>\r\n\t\t\t\t\t현재가: {item.item.currentPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text style={styles.modalText}>\r\n\t\t\t\t\t예상 수익률: {item.item.expectedReturn >= 1 ? Math.round(item.item.expectedReturn * 100 - 100) + '%' :\r\n\t\t\t\t\t\tMath.round((1 - item.item.expectedReturn) * -100) + '%'}\r\n\t\t\t\t</Text>\r\n\t\t\t</View>\r\n\t\t\t<Text style={{ ...styles.modalText, fontWeight: 'bold' }}>\r\n\t\t\t\t추천 구매가: {item.item.purchasePrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}원\r\n\t\t\t</Text>\r\n\t\t\t{isFetching||!data ? <Image resizeMode='contain' style={styles.graph} /> :\r\n\t\t\t\t<Image resizeMode='contain' style={styles.graph} source={{ uri: data.chart }} />}\r\n\t\t\t<ScrollView style={{ flex: 1 }}>\r\n\t\t\t\t{isFetching||!data ? <ListIndicator /> : \r\n\t\t\t\t<Text style={styles.modalText} >{data.info}</Text>}\r\n\t\t\t</ScrollView>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nexport default StockItemDetail;","import React, { memo, useCallback, useState } from 'react';\r\nimport { Text, View, StyleSheet, Modal } from 'react-native';\r\nimport { Colors, Divider, IconButton } from 'react-native-paper';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tflex: 1,\r\n\t},\r\n\ttableHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\tmarginVertical: 10,\r\n\t\talignItems: 'center',\r\n\t},\r\n\theaderContainer: {\r\n\t\tflex: 1,\r\n\t\tflexDirection: 'row',\r\n\t},\r\n\tinfoText: {\r\n\t\tflex: 1,\r\n\t\talignSelf: 'center',\r\n\t\ttextAlign: 'right'\r\n\t},\r\n\tinfoIcon: {\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tmargin: 0,\r\n\t\tpadding: 0,\r\n\t\tmarginStart: -4,\r\n\t\tmarginTop: -3,\r\n\t},\r\n\tmodalView: {\r\n\t\twidth: 250,\r\n\t\theight: 100,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tjustifyContent: 'center',\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 2\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5\r\n\t},\r\n\tmodalHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tbuttonClose: {\r\n\t\talignSelf: 'flex-end',\r\n\t\tright: 0,\r\n\t\ttop: 0,\r\n\t},\r\n\titemModalContainer: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tmargin: 10,\r\n\t\tborderRadius: 50\r\n\t},\r\n\tsnackbar: {\r\n\t\tbackgroundColor: 'black',\r\n\t\tzIndex: 100,\r\n\t},\r\n})\r\n\r\nconst TableHeader = memo((props) => {\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [content, setContent] = useState('');\r\n\tconst [coordX, setCoordX] = useState(0);\r\n\tconst [coordY, setCoordY] = useState(0);\r\n\r\n\tconst showModal = useCallback((title, content) => {\r\n\t\tsetTitle(title);\r\n\t\tsetContent(content);\r\n\t\tsetVisible(true);\r\n\t});\r\n\tconst hideModal = useCallback(() => setVisible(false));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttransparent={true}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonRequestClose={hideModal}\r\n\t\t\t>\r\n\t\t\t\t<View style={{ ...styles.modalView, top: coordY, left: coordX - 250 }}>\r\n\t\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t\t<Text style={{ flex: 1, fontSize: 15, fontWeight: 'bold', marginLeft: 10 }}>{title}</Text>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\ticon={'close'}\r\n\t\t\t\t\t\t\tstyle={styles.buttonClose}\r\n\t\t\t\t\t\t\tonPress={hideModal}\r\n\t\t\t\t\t\t\tcolor='black'\r\n\t\t\t\t\t\t\tsize={15}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<Text style={{ paddingHorizontal: 10 }}>{content}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</Modal>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<View style={styles.tableHeader}>\r\n\t\t\t\t\t<Text style={{ flex: 1.2, textAlign: 'center' }}>종목명</Text>\r\n\t\t\t\t\t<Text style={{ flex: 1, textAlign: 'right' }}>현재가</Text>\r\n\t\t\t\t\t<View style={styles.headerContainer}>\r\n\t\t\t\t\t\t<Text style={styles.infoText}>{`추천\\n구매가`}</Text>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tstyle={styles.infoIcon}\r\n\t\t\t\t\t\t\ticon=\"information\"\r\n\t\t\t\t\t\t\tcolor={Colors.black}\r\n\t\t\t\t\t\t\tsize={10}\r\n\t\t\t\t\t\t\tonPress={(e) => {\r\n\t\t\t\t\t\t\t\tsetCoordX(e.nativeEvent.pageX);\r\n\t\t\t\t\t\t\t\tsetCoordY(e.nativeEvent.pageY);\r\n\t\t\t\t\t\t\t\tshowModal('추천 구매가란?', '1년 후 약 15% 수익을 얻기 위해 추천하는 매수 가격을 말해요.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View style={{ ...styles.headerContainer, flex: 0.8 }}>\r\n\t\t\t\t\t\t<Text style={styles.infoText}>{`예상\\n수익률`}</Text>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tstyle={styles.infoIcon}\r\n\t\t\t\t\t\t\ticon=\"information\"\r\n\t\t\t\t\t\t\tcolor={Colors.black}\r\n\t\t\t\t\t\t\tsize={10}\r\n\t\t\t\t\t\t\tonPress={(e) => {\r\n\t\t\t\t\t\t\t\tsetCoordX(e.nativeEvent.pageX);\r\n\t\t\t\t\t\t\t\tsetCoordY(e.nativeEvent.pageY);\r\n\t\t\t\t\t\t\t\tshowModal('예상 수익률이란?', '현재가에서 매수했을 경우 1년 후 예상되는 수익률을 말해요.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View style={{ flex: 0.4 }} />\r\n\t\t\t\t</View>\r\n\t\t\t\t<Divider style={{ backgroundColor: 'black' }} />\r\n\t\t\t\t{props.children}\r\n\t\t\t</View>\r\n\t\t</>\r\n\t)\r\n});\r\n\r\nexport default TableHeader;","import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { FAB } from 'react-native-paper';\r\n\r\nconst styles = StyleSheet.create({\r\n\tscrollTopBtn: {\r\n\t\tposition: 'absolute',\r\n\t\tbottom: 0,\r\n\t\tright: 0,\r\n\t\tmargin: 16,\r\n\t\tbackgroundColor: '#6937a1'\r\n\t},\r\n})\r\n\r\nconst FabUp = ({scrollRef}) => {\r\n\treturn (\r\n\t\t<FAB\r\n\t\t\tstyle={styles.scrollTopBtn}\r\n\t\t\ticon=\"chevron-up\"\r\n\t\t\tonPress={() => {scrollRef.current.scrollToOffset({ animated: true, offset: 0 })}}\r\n\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default FabUp;","import { useMutation, useQuery } from '@tanstack/react-query';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { FlatList, Modal } from 'react-native';\r\nimport { Provider } from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport { useIsFocused } from '@react-navigation/native';\r\n\r\nimport StockItem from './StockItem';\r\n// import getEnvVars from '../../components/environment';\r\nimport StockItemDetail from './StockItemDetail';\r\nimport TableHeader from '../../components/TableHeader';\r\nimport FabUp from '../../components/FabUp';\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\n\r\nconst InterestTable = () => {\r\n\tconst isFocused = useIsFocused();\r\n\tconst scrollRef = useRef();\r\n\tconst [itemVisible, setItemVisible] = useState(false);\r\n\tconst [detailItem, setDetailItem] = useState();\r\n\r\n\tconst { mutate, isLoading: userLoading, data } = useMutation(\r\n\t\t['interestTableGet'],\r\n\t\tasync (email) => {\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(`${apiUrl}/returnInterest`, email)\r\n\t\t\t\t.then((res) => res.data)\r\n\t\t}\r\n\t)\r\n\r\n\tconst { mutate: interestMutate } = useMutation(\r\n\t\t['interest'],\r\n\t\tasync (stockInfo) => {\r\n\t\t\tconst { email, srtnCd, checkStock, setCheckStock } = stockInfo;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(`${apiUrl}/${checkStock ? 'deleteInterest' : 'addInterest'}`, { email, srtnCd })\r\n\t\t\t\t.then((res) => res.data ? setCheckStock(true) : setCheckStock(false));\r\n\t\t},\r\n\t)\r\n\r\n\tconst { data: userEmail, isLoading: emailLoading } = useQuery(\r\n\t\t['userEmail'],\r\n\t\t() => {\r\n\t\t\tif (userEmail !== undefined) {\r\n\t\t\t\treturn userEmail\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t{\r\n\t\t\tinitalData: false,\r\n\t\t\tstaleTime: Infinity,\r\n\t\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userEmail !== null && userEmail !== undefined) {\r\n\t\t\tmutate({\r\n\t\t\t\t\"email\": userEmail\r\n\t\t\t});\r\n\t\t}\r\n\t}, [isFocused])\r\n\r\n\r\n\tconst showDetailModal = useCallback(() => setItemVisible(true));\r\n\tconst hideDetailModal = (() => setItemVisible(false));\r\n\r\n\tconst _keyExtractor = useCallback((item, index) => {\r\n\t\treturn index.toString();\r\n\t})\r\n\r\n\tconst handleOnPress = useCallback((item) => {\r\n\t\tshowDetailModal();\r\n\t\tsetDetailItem(item);\r\n\t})\r\n\r\n\tconst _renderItem = useCallback((item) => {\r\n\t\treturn <StockItem\r\n\t\t\titem={item}\r\n\t\t\tcheckStar={true}\r\n\t\t\thandleOnPress={handleOnPress}\r\n\t\t\tuserEmail={userEmail}\r\n\t\t\tmutate={interestMutate}\r\n\t\t/>;\r\n\t})\r\n\r\n\tif (userEmail === null && userEmail === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Provider>\r\n\t\t\t<Modal transparent={true} visible={itemVisible} onRequestClose={hideDetailModal}>\r\n\t\t\t\t<StockItemDetail item={detailItem} hideDetailModal={hideDetailModal} />\r\n\t\t\t</Modal>\r\n\t\t\t<TableHeader>\r\n\t\t\t\t{userLoading || emailLoading ? null :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\t\tref={scrollRef}\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\tkeyExtractor={_keyExtractor}\r\n\t\t\t\t\t\t\trenderItem={_renderItem}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FabUp scrollRef={scrollRef} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\r\n\t\t\t</TableHeader>\r\n\t\t</Provider>\r\n\t)\r\n};\r\n\r\nexport default InterestTable;","import { useInfiniteQuery, useMutation, useQuery } from '@tanstack/react-query';\r\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { FlatList, Modal } from 'react-native';\r\nimport { Provider } from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport { useIsFocused } from '@react-navigation/native';\r\n\r\nimport FabUp from '../../components/FabUp';\r\nimport StockItem from './StockItem';\r\nimport ListIndicator from '../../components/ListIndicator';\r\n// import getEnvVars from '../../components/environment';\r\nimport StockItemDetail from './StockItemDetail';\r\nimport TableHeader from '../../components/TableHeader';\r\n\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\n\r\nconst PageList = {\r\n\t\"전체\": \"all\",\r\n\t\"KOSPI\": \"kospi\",\r\n\t\"KOSDAQ\": \"kosdaq\",\r\n}\r\n\r\nconst StockTable = memo((props) => {\r\n\tconst isFocused = useIsFocused();\r\n\tconst scrollRef = useRef();\r\n\tconst [userInterest, setUserInterest] = useState([]);\r\n\tconst [itemVisible, setItemVisible] = useState(false);\r\n\tconst [detailItem, setDetailItem] = useState();\r\n\r\n\tconst { mutate, isLoading: userLoading } = useMutation(\r\n\t\t['interestGet'],\r\n\t\tasync (email) => {\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(`${apiUrl}/returnInterest2`, email)\r\n\t\t\t\t.then((res) => setUserInterest(res.data))\r\n\t\t}\r\n\t)\r\n\r\n\tconst { isLoading, data, hasNextPage, fetchNextPage, isFetchingNextPage } = useInfiniteQuery(\r\n\t\t[`infinite${PageList[props.route.name]}`, props.route.name],\r\n\t\tasync ({ pageParam = 0 }) => {\r\n\t\t\treturn await axios\r\n\t\t\t\t.get(`${apiUrl}/stock/${PageList[props.route.name]}?page=${pageParam}`)\r\n\t\t\t\t.then((res) => { return res.data; })\r\n\t\t},\r\n\t\t{\r\n\t\t\tgetNextPageParam: (lastPage, allPages) => {\r\n\t\t\t\tconst maxPage = lastPage.totalPages;\r\n\t\t\t\tconst nextPage = allPages.length + 1;\r\n\t\t\t\treturn nextPage <= maxPage ? nextPage : undefined;\r\n\t\t\t},\r\n\t\t}\r\n\t);\r\n\r\n\tconst { data: userEmail, isLoading: emailLoading } = useQuery(\r\n\t\t['userEmail'],\r\n\t\t() => {\r\n\t\t\tif (userEmail !== undefined) {\r\n\t\t\t\treturn userEmail\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t{\r\n\t\t\tinitalData: false,\r\n\t\t\tstaleTime: Infinity,\r\n\t\t});\r\n\r\n\tconst { mutate: interestMutate } = useMutation(\r\n\t\t['interest'],\r\n\t\tasync (stockInfo) => {\r\n\t\t\tconst { email, srtnCd, checkStock, setCheckStock } = stockInfo;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(`${apiUrl}/${checkStock ? 'deleteInterest' : 'addInterest'}`, { email, srtnCd })\r\n\t\t\t\t.then((res) => res.data ? setCheckStock(true) : setCheckStock(false));\r\n\t\t},\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userEmail !== null && userEmail !== undefined) {\r\n\t\t\tmutate({\r\n\t\t\t\t\"email\": userEmail\r\n\t\t\t});\r\n\t\t}\r\n\t}, [isFocused])\r\n\r\n\tconst _keyExtractor = useCallback((item, index) => {\r\n\t\treturn index.toString();\r\n\t})\r\n\r\n\tconst showDetailModal = useCallback(() => setItemVisible(true));\r\n\tconst hideDetailModal = (() => setItemVisible(false));\r\n\r\n\tconst handleOnPress = useCallback((item) => {\r\n\t\tshowDetailModal();\r\n\t\tsetDetailItem(item);\r\n\t})\r\n\r\n\tconst _renderItem = useCallback((item) => {\r\n\t\treturn <StockItem\r\n\t\t\titem={item}\r\n\t\t\tcheckStar={userInterest.includes(item.item.srtnCd)}\r\n\t\t\thandleOnPress={handleOnPress}\r\n\t\t\tuserEmail={userEmail}\r\n\t\t\tmutate={interestMutate}\r\n\t\t/>;\r\n\t})\r\n\r\n\tconst _onEndReached = useCallback(() => {\r\n\t\tif (hasNextPage) {\r\n\t\t\tfetchNextPage();\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Provider>\r\n\t\t\t<Modal transparent={true} visible={itemVisible} onRequestClose={hideDetailModal}>\r\n\t\t\t\t<StockItemDetail item={detailItem} hideDetailModal={hideDetailModal} />\r\n\t\t\t</Modal>\r\n\t\t\t<TableHeader>\r\n\t\t\t\t{isLoading || userLoading || emailLoading ? null :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\t\tref={scrollRef}\r\n\t\t\t\t\t\t\tdata={data.pages.map(page => page.content).flat()}\r\n\t\t\t\t\t\t\tremoveClippedSubviews={false}\r\n\t\t\t\t\t\t\tdisableVirtualization={false}\r\n\t\t\t\t\t\t\tkeyExtractor={_keyExtractor}\r\n\t\t\t\t\t\t\trenderItem={_renderItem}\r\n\t\t\t\t\t\t\tonEndReached={_onEndReached}\r\n\t\t\t\t\t\t\tonEndReachedThreshold={0.2}\r\n\t\t\t\t\t\t\tListFooterComponent={isFetchingNextPage ? <ListIndicator /> : null}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FabUp scrollRef={scrollRef} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</TableHeader>\r\n\t\t</Provider>\r\n\t)\r\n});\r\n\r\nexport default StockTable;","import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useState } from 'react';\r\nimport { StyleSheet, View, StatusBar, Platform, TouchableWithoutFeedback, Keyboard } from 'react-native';\r\nimport { Searchbar, Avatar, Button } from 'react-native-paper';\r\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\r\nimport { LogBox } from 'react-native';\r\n\r\nimport InterestTable from './InterestTable';\r\nimport StockTable from './StockTable';\r\n\r\nLogBox.ignoreLogs(['Sending']);\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\nconst StatusBarHeight = Platform.OS === 'ios' ? getStatusBarHeight(true) : StatusBar.currentHeight\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tpaddingTop: StatusBarHeight,\r\n\t\tbackgroundColor: 'white',\r\n\t},\r\n\theader: {\r\n\t\tflexDirection: 'row',\r\n\t\tbackgroundColor: 'white',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tinputBox: {\r\n\t\tmargin: 10,\r\n\t\tmarginBottom: 2,\r\n\t\tflex: 1,\r\n\t\theight: 40,\r\n\t},\r\n\tloginButton: {\r\n\t\tmarginRight: 10,\r\n\t\tmarginTop: 5,\r\n\t},\r\n})\r\n\r\nconst Home = () => {\r\n\tconst navigation = useNavigation();\r\n\tconst [searchQuery, setSearchQuery] = useState('');\r\n\r\n\tconst { data: userEmail } = useQuery(\r\n\t\t['userEmail'],\r\n\t\t() => {\r\n\t\t\tif (userEmail !== undefined) {\r\n\t\t\t\treturn userEmail\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t{\r\n\t\t\tinitalData: false,\r\n\t\t\tstaleTime: Infinity,\r\n\t\t});\r\n\r\n\treturn (\r\n\t\t\t<TouchableWithoutFeedback onPress={Platform.OS === 'web' ? null : Keyboard.dismiss}>\r\n\t\t\t\t<View style={styles.container}>\r\n\t\t\t\t\t<View style={styles.header}>\r\n\t\t\t\t\t\t<Searchbar\r\n\t\t\t\t\t\t\tplaceholder='주식명 검색'\r\n\t\t\t\t\t\t\tvalue={searchQuery}\r\n\t\t\t\t\t\t\tonChangeText={serachQuery => setSearchQuery(serachQuery)}\r\n\t\t\t\t\t\t\tstyle={styles.inputBox}\r\n\t\t\t\t\t\t\tonIconPress={() => {\r\n\t\t\t\t\t\t\t\tif (searchQuery.length > 0) {\r\n\t\t\t\t\t\t\t\t\tnavigation.navigate('SearchPage', { query: searchQuery })\r\n\t\t\t\t\t\t\t\t\tsetSearchQuery('');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonSubmitEditing={() => {\r\n\t\t\t\t\t\t\t\tif (searchQuery.length > 0) {\r\n\t\t\t\t\t\t\t\t\tnavigation.navigate('SearchPage', { query: searchQuery })\r\n\t\t\t\t\t\t\t\t\tsetSearchQuery('');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{userEmail ?\r\n\t\t\t\t\t\t\t<TouchableWithoutFeedback\r\n\t\t\t\t\t\t\t\tonPress={() => navigation.navigate('ChangePW')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Avatar.Text\r\n\t\t\t\t\t\t\t\t\tstyle={{ ...styles.loginButton, backgroundColor: 'black' }}\r\n\t\t\t\t\t\t\t\t\tlabel={userEmail[0].toUpperCase()}\r\n\t\t\t\t\t\t\t\t\tcolor=\"white\"\r\n\t\t\t\t\t\t\t\t\tsize={40}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TouchableWithoutFeedback>\r\n\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tcompact={true}\r\n\t\t\t\t\t\t\t\tstyle={{ ...styles.loginButton }}\r\n\t\t\t\t\t\t\t\tcolor='black'\r\n\t\t\t\t\t\t\t\tonPress={() => navigation.navigate('Login')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<Tab.Navigator\r\n\t\t\t\t\t\tscreenOptions={{\r\n\t\t\t\t\t\t\ttabBarItemStyle: { width: 90 },\r\n\t\t\t\t\t\t\ttabBarIndicatorStyle: { backgroundColor: '#6200ee' },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tab.Screen name=\"전체\" component={StockTable} />\r\n\t\t\t\t\t\t<Tab.Screen name=\"KOSPI\" component={StockTable} />\r\n\t\t\t\t\t\t<Tab.Screen name=\"KOSDAQ\" component={StockTable} />\r\n\t\t\t\t\t\t{userEmail ? <Tab.Screen name=\"관심\" component={InterestTable} /> : null}\r\n\t\t\t\t\t</Tab.Navigator>\r\n\t\t\t\t</View>\r\n\t\t\t</TouchableWithoutFeedback>\r\n\t);\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { IconButton, Text, Title } from 'react-native-paper';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontentContainer: {\r\n\t\tbackgroundColor: '#e9e9e9',\r\n\t\tpaddingVertical: 10,\r\n\t\tpaddingHorizontal: 15,\r\n\t\tborderRadius: 10,\r\n\t\tmarginBottom: 10,\r\n\t}\r\n})\r\n\r\nconst GuideItem = (props) => {\r\n\tconst [iconName, setIconName] = useState('chevron-down');\r\n\tconst [contentEnable, setContentEnable] = useState(false);\r\n\tconst iconChange = () => {\r\n\t\ticonName === 'chevron-up' ? setIconName('chevron-down') : setIconName('chevron-up');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<View style={{ flexDirection: 'row'}}>\r\n\t\t\t\t<Title style={{ fontWeight: 'bold' }}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\ticonChange();\r\n\t\t\t\t\t\tsetContentEnable(!contentEnable);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</Title>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\ticon={iconName}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\ticonChange();\r\n\t\t\t\t\t\tsetContentEnable(!contentEnable);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tcolor='black'\r\n\t\t\t\t\tsize={20}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t{contentEnable ?\r\n\t\t\t\t<View style={styles.contentContainer}>\r\n\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t{props.content}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</View> :\tnull\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GuideItem;","import React from 'react';\r\nimport { ScrollView, StyleSheet, View } from 'react-native';\r\nimport { Divider, Headline, IconButton, Text } from 'react-native-paper';\r\n\r\nimport GuideItem from './GuideItem';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 30,\r\n\t\tpaddingVertical: 40,\r\n\t},\r\n\theadline: {\r\n\t\tfontSize: 30,\r\n\t},\r\n\tcontentContainer: {\r\n\t\tbackgroundColor: '#e9e9e9',\r\n\t\tpaddingVertical: 15,\r\n\t\tpaddingHorizontal: 15,\r\n\t\tborderRadius: 10,\r\n\t\tmarginBottom: 10,\r\n\t}\r\n})\r\n\r\nconst Guide = () => {\r\n\treturn (\r\n\t\t<ScrollView style={{ backgroundColor: 'white' }}>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<Headline style={{ ...styles.headline, marginTop: 30 }}>\r\n\t\t\t\t\t여우의 주식 레시피를\r\n\t\t\t\t</Headline>\r\n\t\t\t\t<Headline style={styles.headline}>\r\n\t\t\t\t\t이렇게 사용해요!\r\n\t\t\t\t</Headline>\r\n\r\n\t\t\t\t<Divider style={{ marginVertical: 20 }} />\r\n\r\n\t\t\t\t<View style={styles.contentContainer}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\ticon=\"alert\"\r\n\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\tsize={30}\r\n\t\t\t\t\t\tstyle={{ padding: 0, margin: 0 }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t{`추천 구매가와 예상 수익률은 \"여우의 주식레시피\"에서 예상하는 값으로 항상 정확한 값이 아닌 대략적인 예상치를 표현해요.\r\n\t\t\t\t\t\t\\n신생 기업, 작년 비정상적인 매출액 등 여러 요인으로 인해 주식이 고평가되는 경우가 있으니 추천 구매가와 예상 수익률로만 구매를 결정하기보단\t투자 종목을 고르는데 참고하는 용도로만 사용해요!`}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<GuideItem\r\n\t\t\t\t\ttitle=\"추천 구매가란?\"\r\n\t\t\t\t\tcontent={`(BPS * ROE^10) / 목표 수익률^10 = 추천 구매가\\n위와 같은 계산을 통해 나온 값으로 1년 후 약 15% 수익을 얻기 위해 추천하는 매수 가격을 말해요.`}\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider style={{ backgroundColor: 'white', marginVertical: 5 }} />\r\n\r\n\t\t\t\t<GuideItem\r\n\t\t\t\t\ttitle=\"예상 수익률이란?\"\r\n\t\t\t\t\tcontent={`ROE^10 / PBR = 예상 수익률^10\\n위와 계산을 통해 나온 값으로 현재가에서 매수했을 경우 1년 후 예상되는 수익률을 말해요.`}\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider style={{ backgroundColor: 'white', marginVertical: 5 }} />\r\n\r\n\t\t\t\t<GuideItem\r\n\t\t\t\t\ttitle=\"BPS(Book-value Per Share)란?\"\r\n\t\t\t\t\tcontent=\"주당순자산가치로 현재 시점에서 기업의 활동을 중단시키고 그 부를 모든 주주들에게 나눠줄 경우 한 주당 얼마씩 돌아가는가를 나타내는 수치를 말해요. 즉 회사의 순자산을\r\n\t\t\t\t\t회사간 발행한 총 주식수로 나눈 값을 말해요.\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider style={{ backgroundColor: 'white', marginVertical: 5 }} />\r\n\r\n\t\t\t\t<GuideItem\r\n\t\t\t\t\ttitle=\"ROE(Return On Equity)란?\"\r\n\t\t\t\t\tcontent=\"자기자본이익률로 기업이 자본을 이용하여 얼마만큼의 이익을 냈는지를 나타내는 지표를 말해요. 즉 당기순이익을 자기자본으로 나눈 것으로 만약 자기자본이 1000원, 당기순이익이 100원이라면 ROE는 10% 랍니다.\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider style={{ backgroundColor: 'white', marginVertical: 5 }} />\r\n\r\n\t\t\t\t<GuideItem\r\n\t\t\t\t\ttitle=\"PBR(Price Book-value Ratio)란?\"\r\n\t\t\t\t\tcontent=\"주가순자신비율로 주가를 주당순자산가치(BPS)로 나눈 비율을 말해요. 즉 PBR = 현재 주가/BPS = 시가총액/순자산 이랍니다. 만약 PBR이 2라면 회사가 망했을 때 10원을 받을 수 있는 주식이 20원에 거래되고 있다는 것을 의미해요.\"\r\n\t\t\t\t/>\r\n\t\t\t\t<GuideItem\r\n\t\t\t\t\ttitle=\"추천 구매가가 0이거나 예상 수익률이 -100%인건 뭔가요?\"\r\n\t\t\t\t\tcontent=\"신생 기업이기 때문에 ROE 데이터가 없는 경우 또는 적자인 경우에 추천 구매가가 0이거나 예상 수익률이 -100%로 표시돼요. 투자에 주의하세요!\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider style={{ backgroundColor: 'white', marginVertical: 5 }} />\r\n\r\n\r\n\t\t\t</View>\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nexport default Guide;","import React from 'react';\r\nimport { Divider, Headline } from 'react-native-paper';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport UserButton from '../../components/UserButton';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 30,\r\n\t\tpaddingTop: 40,\r\n\t},\r\n\theadline: {\r\n\t\tfontSize: 30,\r\n\t\tmarginStart: 10\r\n\t},\r\n})\r\n\r\nconst FindUserInfo = () => {\r\n\tconst navigation = useNavigation();\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Headline style={styles.headline}>나의</Headline>\r\n\t\t\t<Headline style={styles.headline}>주식 레시피를</Headline>\r\n\t\t\t<Headline style={{ ...styles.headline, marginBottom: 40 }}>찾아볼까요?</Headline>\r\n\r\n\t\t\t<UserButton\r\n\t\t\t\tonPress={() => navigation.navigate('FindID')}\r\n\t\t\t>\r\n\t\t\t\t아이디 찾기\r\n\t\t\t</UserButton>\r\n\t\t\t<Divider style={{margin: 10, backgroundColor: 'white'}}/>\r\n\t\t\t<UserButton\r\n\t\t\t\tonPress={() => navigation.navigate('FindPW')}\r\n\t\t\t>\r\n\t\t\t\t비밀번호 찾기\r\n\t\t\t</UserButton>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nexport default FindUserInfo;","import React, { useState } from 'react';\r\nimport { Keyboard, KeyboardAvoidingView, Modal, Platform, ScrollView, StatusBar, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { HelperText, IconButton, List, Text, TextInput } from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\r\n\r\n// import getEnvVars from '../../components/environment';\r\nimport UserButton from '../../components/UserButton';\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\nconst StatusBarHeight = Platform.OS === 'ios' ? getStatusBarHeight(true) : StatusBar.currentHeight;\r\nconst QuestionList = ['내가 졸업한 초등학교는?', '내가 가장 아끼는 물건은?', '내가 가장 좋아하는 색깔은?', '내가 키우는 애완동물 이름은?']\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tpaddingTop: 40,\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 30,\r\n\t},\r\n\tinput: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tmarginBottom: 5,\r\n\t},\r\n\tmodalView: {\r\n\t\tflex: 1,\r\n\t\talignSelf: 'center',\r\n\t\tmarginTop: 300,\r\n\t\tminHeight: 70,\r\n\t\tmaxHeight: 100,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tjustifyContent: 'center',\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 2\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5\r\n\t},\r\n\tmodalHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n})\r\n\r\nconst FindPW = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [checkQuestion, setCheckQuestion] = useState('가입 시 설정한 질문을 골라주세요.')\r\n\tconst [checkAnswer, setCheckAnswer] = useState('');\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\tconst [checkAnswerIdx, setCheckAnswerIdx] = useState();\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst { mutate } = useMutation(\r\n\t\t['findPW'],\r\n\t\tasync (userInfo) => {\r\n\t\t\tconst url = `${apiUrl}/findPw`;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(url, userInfo)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetPassword(res.data);\r\n\t\t\t\t\tsetVisible(true);\r\n\t\t\t\t});\r\n\t\t},\r\n\t)\r\n\r\n\tconst hideModal = () => setVisible(false);\r\n\r\n\tconst hasEmailError = () => {\r\n\t\tvar reg = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n\t\treturn !reg.test(email);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAvoidingView\r\n\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n\t\t\tstyle={{ flex: 1 }}\r\n\t\t\tkeyboardVerticalOffset={StatusBarHeight + 44}\r\n\t\t>\r\n\t\t\t<ScrollView style={{ backgroundColor: 'white' }}>\r\n\t\t\t\t<TouchableWithoutFeedback onPress={Platform.OS === 'web' ? null : Keyboard.dismiss}>\r\n\t\t\t\t\t<View style={styles.container}>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonRequestClose={hideModal}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<View style={styles.modalView}>\r\n\t\t\t\t\t\t\t\t{password !== '입력 정보를 찾을 수 없습니다.' ?\r\n\t\t\t\t\t\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t\t\t\t\t\t<View flexDirection='column'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text style={{ marginLeft: 10, textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`${email}의\\n임시 비밀번호는`}\r\n\t\t\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text selectable style={{ fontSize: 15, fontWeight: 'bold', paddingHorizontal: 10, textAlign: 'center' }}>{`${password}`}</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text style={{ textAlign: 'center' }}>입니다.</Text>\r\n\t\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\ticon={'close'}\r\n\t\t\t\t\t\t\t\t\t\t\tonPress={hideModal}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='black'\r\n\t\t\t\t\t\t\t\t\t\t\tsize={15}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, fontWeight: 'bold', paddingHorizontal: 10, textAlign: 'center' }}>{password}</Text>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\ticon={'close'}\r\n\t\t\t\t\t\t\t\t\t\t\tonPress={hideModal}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='black'\r\n\t\t\t\t\t\t\t\t\t\t\tsize={15}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tlabel='E-mail'\r\n\t\t\t\t\t\t\tplaceholder='이메일을 입력해주세요'\r\n\t\t\t\t\t\t\tkeyboardType='email-address'\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChangeText={(email) => setEmail(email)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<HelperText style={styles.helperText} type='error' visible={hasEmailError() && email !== ''}>\r\n\t\t\t\t\t\t\t이메일주소가 올바르지 않습니다.\r\n\t\t\t\t\t\t</HelperText>\r\n\r\n\t\t\t\t\t\t<List.Section>\r\n\t\t\t\t\t\t\t<List.Accordion\r\n\t\t\t\t\t\t\t\ttitle={checkQuestion}\r\n\t\t\t\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\t\t\t\tonPress={() => setExpanded(!expanded)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{QuestionList.map((content, idx) => {\r\n\t\t\t\t\t\t\t\t\treturn (<List.Item\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\ttitle={content}\r\n\t\t\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckQuestion(content);\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckAnswerIdx(idx);\r\n\t\t\t\t\t\t\t\t\t\t\tsetExpanded(false);\r\n\t\t\t\t\t\t\t\t\t\t}} />)\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</List.Accordion>\r\n\t\t\t\t\t\t</List.Section>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={{ ...styles.input, marginBottom: 30 }}\r\n\t\t\t\t\t\t\tlabel='답'\r\n\t\t\t\t\t\t\tplaceholder='선택한 질문에 대한 답을 입력해주세요.'\r\n\t\t\t\t\t\t\tvalue={checkAnswer}\r\n\t\t\t\t\t\t\tonChangeText={(checkAnswer) => setCheckAnswer(checkAnswer)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<UserButton\r\n\t\t\t\t\t\t\tdisabled={hasEmailError() || checkAnswerIdx === undefined || checkAnswer === ''}\r\n\t\t\t\t\t\t\tonPress={() => mutate({\r\n\t\t\t\t\t\t\t\t\"email\": email,\r\n\t\t\t\t\t\t\t\t\"userCheckQuestionNumber\": checkAnswerIdx,\r\n\t\t\t\t\t\t\t\t\"userCheckQuestionAnswer\": checkAnswer,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t비밀번호 찾기\r\n\t\t\t\t\t\t</UserButton>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableWithoutFeedback>\r\n\t\t\t</ScrollView>\r\n\t\t</KeyboardAvoidingView>\r\n\t);\r\n};\r\n\r\nexport default FindPW;","import React, { useState } from 'react';\r\nimport { Keyboard, KeyboardAvoidingView, Modal, Platform, ScrollView, StatusBar, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { IconButton, List, Text, TextInput } from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\r\n\r\n// import getEnvVars from '../../components/environment';\r\nimport UserButton from '../../components/UserButton';\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\nconst StatusBarHeight = Platform.OS === 'ios' ? getStatusBarHeight(true) : StatusBar.currentHeight;\r\nconst QuestionList = ['내가 졸업한 초등학교는?', '내가 가장 아끼는 물건은?', '내가 가장 좋아하는 색깔은?', '내가 키우는 애완동물 이름은?']\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tpaddingTop: 40,\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 30,\r\n\t},\r\n\tinput: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tmarginBottom: 5,\r\n\t},\r\n\tmodalView: {\r\n\t\tflex: 1,\r\n\t\talignSelf: 'center',\r\n\t\tmarginTop: 300,\r\n\t\tminHeight: 70,\r\n\t\tmaxHeight: 100,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tjustifyContent: 'center',\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 2\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5\r\n\t},\r\n\tmodalHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n})\r\n\r\nconst FindID = () => {\r\n\tconst [name, setName] = useState('');\r\n\tconst [checkQuestion, setCheckQuestion] = useState('가입 시 설정한 질문을 골라주세요.')\r\n\tconst [checkAnswer, setCheckAnswer] = useState('');\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\tconst [checkAnswerIdx, setCheckAnswerIdx] = useState();\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [id, setId] = useState('');\r\n\r\n\tconst hideModal = () => setVisible(false);\r\n\r\n\tconst { mutate, data } = useMutation(\r\n\t\t['findId'],\r\n\t\tasync (userInfo) => {\r\n\t\t\tconst url = `${apiUrl}/findId`;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(url, userInfo)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetId(res.data);\r\n\t\t\t\t\tsetVisible(true);\r\n\t\t\t\t});\r\n\t\t},\r\n\t)\r\n\r\n\treturn (\r\n\t\t<KeyboardAvoidingView\r\n\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n\t\t\tstyle={{ flex: 1 }}\r\n\t\t\tkeyboardVerticalOffset={StatusBarHeight + 44}\r\n\t\t>\r\n\t\t\t<ScrollView style={{ backgroundColor: 'white' }}>\r\n\t\t\t\t<TouchableWithoutFeedback onPress={Platform.OS === 'web' ? null : Keyboard.dismiss}>\r\n\t\t\t\t\t<View style={styles.container}>\r\n\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonRequestClose={hideModal}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<View style={styles.modalView}>\r\n\t\t\t\t\t\t\t\t{id !== '입력 정보를 찾을 수 없습니다.' ?\r\n\t\t\t\t\t\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t\t\t\t\t\t<View flexDirection='column'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text style={{ marginLeft: 10, textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`${name}님의 아이디는`}\r\n\t\t\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text selectable style={{ fontSize: 15, fontWeight: 'bold', paddingHorizontal: 10, textAlign: 'center' }}>{`${id} `}</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text style={{ textAlign: 'center' }}>입니다.</Text>\r\n\t\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\ticon={'close'}\r\n\t\t\t\t\t\t\t\t\t\t\tonPress={hideModal}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='black'\r\n\t\t\t\t\t\t\t\t\t\t\tsize={15}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, fontWeight: 'bold', paddingHorizontal: 10, textAlign: 'center' }}>{id}</Text>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\ticon={'close'}\r\n\t\t\t\t\t\t\t\t\t\t\tonPress={hideModal}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='black'\r\n\t\t\t\t\t\t\t\t\t\t\tsize={15}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tlabel='이름'\r\n\t\t\t\t\t\t\tplaceholder='이름을 입력해주세요'\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChangeText={(name) => setName(name)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<List.Section>\r\n\t\t\t\t\t\t\t<List.Accordion\r\n\t\t\t\t\t\t\t\ttitle={checkQuestion}\r\n\t\t\t\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\t\t\t\tonPress={() => setExpanded(!expanded)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{QuestionList.map((content, idx) => {\r\n\t\t\t\t\t\t\t\t\treturn (<List.Item\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\ttitle={content}\r\n\t\t\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckQuestion(content);\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckAnswerIdx(idx);\r\n\t\t\t\t\t\t\t\t\t\t\tsetExpanded(false);\r\n\t\t\t\t\t\t\t\t\t\t}} />)\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</List.Accordion>\r\n\t\t\t\t\t\t</List.Section>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={{ ...styles.input, marginBottom: 30 }}\r\n\t\t\t\t\t\t\tlabel='답'\r\n\t\t\t\t\t\t\tplaceholder='선택한 질문에 대한 답을 입력해주세요.'\r\n\t\t\t\t\t\t\tvalue={checkAnswer}\r\n\t\t\t\t\t\t\tonChangeText={(checkAnswer) => setCheckAnswer(checkAnswer)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<UserButton\r\n\t\t\t\t\t\t\tdisabled={visible || checkAnswerIdx === undefined || checkAnswer === '' || name === ''}\r\n\t\t\t\t\t\t\tonPress={() => mutate({\r\n\t\t\t\t\t\t\t\t\"name\": name,\r\n\t\t\t\t\t\t\t\t\"userCheckQuestionNumber\": checkAnswerIdx,\r\n\t\t\t\t\t\t\t\t\"userCheckQuestionAnswer\": checkAnswer\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t아이디 찾기\r\n\t\t\t\t\t\t</UserButton>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableWithoutFeedback>\r\n\t\t\t</ScrollView>\r\n\t\t</KeyboardAvoidingView>\r\n\t);\r\n};\r\n\r\nexport default FindID;","import React, { useState } from 'react';\r\nimport { Keyboard, KeyboardAvoidingView, LogBox, Platform, ScrollView, StatusBar, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { HelperText, Snackbar, Text, TextInput } from 'react-native-paper';\r\nimport axios from 'axios';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\r\n\r\n// import getEnvVars from '../../components/environment';\r\nimport UserButton from '../../components/UserButton';\r\nLogBox.ignoreLogs(['500']);\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\nconst StatusBarHeight = Platform.OS === 'ios' ? getStatusBarHeight(true) : StatusBar.currentHeight;\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tpaddingTop: 40,\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 30,\r\n\t},\r\n\tinput: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tmarginBottom: 5,\r\n\t},\r\n\tsnackbar: {\r\n\t\tbackgroundColor: 'black',\r\n\t\tzIndex: 100,\r\n\t},\r\n\thelperText: {\r\n\t\tmarginTop: 0,\r\n\t\tmarginLeft: 20\r\n\t}\r\n})\r\n\r\nconst ChnagePW = () => {\r\n\tconst navigation = useNavigation();\r\n\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [newPassword, setNewPassword] = useState('');\r\n\tconst [checkPassword, setCheckPassword] = useState('');\r\n\tconst [checkSuccess, setCheckSuccess] = useState(null);\r\n\tconst [visibleError, setVisibleError] = useState(false);\r\n\r\n\r\n\tconst { mutate } = useMutation(\r\n\t\t['changePW'],\r\n\t\tasync (userInfo) => {\r\n\t\t\tconst url = `${apiUrl}/changePw`;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(url, userInfo)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetCheckSuccess(res.data);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t{\r\n\t\t\tonError: () => {\r\n\t\t\t\tsetVisibleError(true);\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n\tconst hasEmailError = () => {\r\n\t\tvar reg = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n\t\treturn !reg.test(email);\r\n\t};\r\n\r\n\tconst hasPasswordError = () => {\r\n\t\treturn newPassword === checkPassword\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAvoidingView\r\n\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n\t\t\tstyle={{ flex: 1 }}\r\n\t\t\tkeyboardVerticalOffset={StatusBarHeight + 44}\r\n\t\t>\r\n\t\t\t<ScrollView style={{ backgroundColor: 'white' }}>\r\n\t\t\t\t<TouchableWithoutFeedback onPress={Platform.OS === 'web' ? null : Keyboard.dismiss}>\r\n\t\t\t\t\t<View style={styles.container}>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\tstyle={styles.snackbar}\r\n\t\t\t\t\t\t\tvisible={checkSuccess}\r\n\t\t\t\t\t\t\tduration={1000}\r\n\t\t\t\t\t\t\twrapperStyle={{\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\t\t\t\tsetCheckSuccess(false);\r\n\t\t\t\t\t\t\t\tnavigation.navigate('HomeStackScreen');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t\t비밀번호 변경 완료!\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\tstyle={styles.snackbar}\r\n\t\t\t\t\t\t\tvisible={checkSuccess === false}\r\n\t\t\t\t\t\t\tduration={1000}\r\n\t\t\t\t\t\t\twrapperStyle={{\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\t\t\t\tsetCheckSuccess(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t\t현재 비밀번호가 일치하지 않습니다.\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\tstyle={styles.snackbar}\r\n\t\t\t\t\t\t\tvisible={visibleError}\r\n\t\t\t\t\t\t\tduration={1000}\r\n\t\t\t\t\t\t\twrapperStyle={{\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\t\t\t\tsetVisibleError(false);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t\t이메일이 존재하지 않습니다.\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\tstyle={styles.snackbar}\r\n\t\t\t\t\t\t\tvisible={checkSuccess === false}\r\n\t\t\t\t\t\t\tduration={1000}\r\n\t\t\t\t\t\t\twrapperStyle={{\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonDismiss={() => {\r\n\t\t\t\t\t\t\t\tsetCheckSuccess(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={{ color: 'white' }}>\r\n\t\t\t\t\t\t\t\t현재 비밀번호가 일치하지 않습니다.\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tlabel='E-mail'\r\n\t\t\t\t\t\t\tplaceholder='이메일을 입력해주세요'\r\n\t\t\t\t\t\t\tleft={<TextInput.Icon name=\"account\" />}\r\n\t\t\t\t\t\t\tkeyboardType='email-address'\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChangeText={(email) => setEmail(email)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<HelperText style={styles.helperText} type='error' visible={hasEmailError() && email !== ''}>\r\n\t\t\t\t\t\t\t이메일주소가 올바르지 않습니다.\r\n\t\t\t\t\t\t</HelperText>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tleft={<TextInput.Icon name=\"lock\" />}\r\n\t\t\t\t\t\t\tlabel='Current Password'\r\n\t\t\t\t\t\t\tplaceholder='현재 비밀번호를 입력해주세요'\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChangeText={(password) => setPassword(password)}\r\n\t\t\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tleft={<TextInput.Icon name=\"lock\" />}\r\n\t\t\t\t\t\t\tlabel='New Password'\r\n\t\t\t\t\t\t\tplaceholder='변경할 비밀번호를 입력해주세요'\r\n\t\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\t\tonChangeText={(newPassword) => setNewPassword(newPassword)}\r\n\t\t\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tleft={<TextInput.Icon name=\"lock\" />}\r\n\t\t\t\t\t\t\tlabel='New Password Check'\r\n\t\t\t\t\t\t\tplaceholder='변경할 비밀번호를 다시 입력해주세요'\r\n\t\t\t\t\t\t\tvalue={checkPassword}\r\n\t\t\t\t\t\t\tonChangeText={(checkPassword) => setCheckPassword(checkPassword)}\r\n\t\t\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<HelperText type='error' visible={!hasPasswordError()}>\r\n\t\t\t\t\t\t\t비밀번호가 일치하지 않습니다.\r\n\t\t\t\t\t\t</HelperText>\r\n\r\n\t\t\t\t\t\t<UserButton\r\n\t\t\t\t\t\t\tdisabled={checkSuccess || email === '' || hasEmailError() || !hasPasswordError() || password === ''}\r\n\t\t\t\t\t\t\tonPress={() => mutate({\r\n\t\t\t\t\t\t\t\t\"email\": email,\r\n\t\t\t\t\t\t\t\t\"nowPassword\": password,\r\n\t\t\t\t\t\t\t\t\"newPassword\": newPassword,\r\n\t\t\t\t\t\t\t\t\"checkNewPassword\": checkPassword\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t비밀번호 변경\r\n\t\t\t\t\t\t</UserButton>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableWithoutFeedback>\r\n\t\t\t</ScrollView>\r\n\t\t</KeyboardAvoidingView>\r\n\t);\r\n};\r\n\r\nexport default ChnagePW;","import { useMutation, useQuery } from '@tanstack/react-query';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Text, View, FlatList, StyleSheet, Modal } from 'react-native';\r\nimport { Provider } from 'react-native-paper';\r\nimport axios from 'axios';\r\n// import getEnvVars from '../../components/environment';\r\nimport { useIsFocused } from '@react-navigation/native';\r\n\r\nimport StockItem from '../Home/StockItem';\r\nimport FabUp from '../../components/FabUp';\r\nimport TableHeader from '../../components/TableHeader';\r\nimport StockItemDetail from '../Home/StockItemDetail';\r\n\r\n// const { apiUrl } = getEnvVars();\r\nconst apiUrl = 'http://ykh8746.iptime.org:8080';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tflex: 1,\r\n\t},\r\n\tqueryText: {\r\n\t\tpaddingHorizontal: 30,\r\n\t\tpaddingVertical: 10,\r\n\t\tflexDirection: 'row',\r\n\t\tborderBottomWidth: 1,\r\n\t}\r\n})\r\n\r\nconst SearchPage = ({ route }) => {\r\n\tconst isFocused = useIsFocused();\r\n\tconst scrollRef = useRef();\r\n\tconst [userInterest, setUserInterest] = useState([]);\r\n\tconst [itemVisible, setItemVisible] = useState(false);\r\n\tconst [detailItem, setDetailItem] = useState();\r\n\r\n\r\n\tconst { mutate, isLoading: userLoading } = useMutation(\r\n\t\t['interestGet'],\r\n\t\tasync (email) => {\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(`${apiUrl}/returnInterest2`, email)\r\n\t\t\t\t.then((res) => setUserInterest(res.data))\r\n\t\t}\r\n\t)\r\n\r\n\tconst { mutate: interestMutate } = useMutation(\r\n\t\t['interest'],\r\n\t\tasync (stockInfo) => {\r\n\t\t\tconst { email, srtnCd, checkStock, setCheckStock } = stockInfo;\r\n\t\t\treturn await axios\r\n\t\t\t\t.post(`${apiUrl}/${checkStock ? 'deleteInterest' : 'addInterest'}`, {email, srtnCd})\r\n\t\t\t\t.then((res) => res.data ? setCheckStock(true) : setCheckStock(false));\r\n\t\t},\r\n\t)\r\n\r\n\tconst { data: userEmail, isLoading: emailLoading } = useQuery(\r\n\t\t['userEmail'],\r\n\t\t() => {\r\n\t\t\tif (userEmail !== undefined) {\r\n\t\t\t\treturn userEmail\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t{\r\n\t\t\tinitalData: false,\r\n\t\t\tstaleTime: Infinity,\r\n\t\t});\r\n\r\n\tconst { isLoading, data } = useQuery(\r\n\t\t['search'],\r\n\t\tasync () => {\r\n\t\t\treturn await axios\r\n\t\t\t\t.get(`${apiUrl}/stock/search?query=${route.params.query}`)\r\n\t\t\t\t.then((res) => res.data.content);\r\n\t\t},\r\n\t)\r\n\r\n\tconst showDetailModal = useCallback(() => setItemVisible(true));\r\n\tconst hideDetailModal = (() => setItemVisible(false));\r\n\r\n\tconst _keyExtractor = useCallback((item, index) => {\r\n\t\treturn index.toString();\r\n\t})\r\n\r\n\tconst handleOnPress = useCallback((item) => {\r\n\t\tshowDetailModal();\r\n\t\tsetDetailItem(item);\r\n\t})\r\n\r\n\tconst _renderItem = useCallback((item) => {\r\n\t\treturn <StockItem\r\n\t\t\titem={item}\r\n\t\t\tcheckStar={userInterest.includes(item.item.srtnCd)}\r\n\t\t\thandleOnPress={handleOnPress}\r\n\t\t\tuserEmail={userEmail}\r\n\t\t\tmutate={interestMutate}\r\n\t\t/>;\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userEmail !== null && userEmail !== undefined) {\r\n\t\t\tmutate({\r\n\t\t\t\t\"email\": userEmail\r\n\t\t\t});\r\n\t\t}\r\n\t}, [isFocused])\r\n\r\n\r\n\tif (isLoading || userLoading || emailLoading) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Provider>\r\n\t\t\t<Modal transparent={true} visible={itemVisible} onRequestClose={hideDetailModal}>\r\n\t\t\t\t<StockItemDetail item={detailItem} hideDetailModal={hideDetailModal}/>\r\n\t\t\t</Modal>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<View style={styles.queryText}>\r\n\t\t\t\t\t<Text style={{ fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\"{route.params.query}\"\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t에 대한 검색 결과입니다.\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t<TableHeader>\r\n\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\tref={scrollRef}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tkeyExtractor={_keyExtractor}\r\n\t\t\t\t\t\trenderItem={_renderItem}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TableHeader>\r\n\t\t\t\t<FabUp scrollRef={scrollRef} />\r\n\t\t\t</View>\r\n\t\t</Provider>\r\n\t);\r\n};\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nimport Login from '../screens/Login';\r\nimport SignUp from '../screens/SignUp';\r\nimport Home from '../screens/Home';\r\nimport Guide from '../screens/Guide';\r\nimport FindUserInfo from '../screens/FindUserInfo';\r\nimport FindPW from '../screens/FindUserInfo/FindPW';\r\nimport FindID from '../screens/FindUserInfo/FindID';\r\nimport ChangePW from '../screens/ChangePW';\r\nimport SearchPage from '../screens/SearchPage';\r\n\r\nconst HomeTab = createMaterialBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst HomeStackScreen = () => {\r\n\treturn (\r\n\t\t<HomeTab.Navigator\r\n\t\t\tinitialRouteName='Home'\r\n\t\t\tbarStyle={{\r\n\t\t\t\tbackgroundColor: '#660099',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<HomeTab.Screen\r\n\t\t\t\tname=\"Home\"\r\n\t\t\t\tcomponent={Home}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\ttabBarIcon: ({color}) => (<MaterialCommunityIcons name=\"finance\" color={color} size={25} />),\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<HomeTab.Screen\r\n\t\t\t\tname=\"Guide\"\r\n\t\t\t\tcomponent={Guide}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\ttabBarIcon: ({color}) => (<MaterialCommunityIcons name=\"book-open-outline\" color={color} size={25} />),\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</HomeTab.Navigator>\r\n\t)\r\n}\r\n\r\nconst StackNavigator = () => {\r\n\treturn (\r\n\t\t<NavigationContainer>\r\n\t\t\t<Stack.Navigator\r\n\t\t\t\tinitialRouteName='HomeStackScreen'\r\n\t\t\t>\r\n\t\t\t\t<Stack.Screen\r\n\t\t\t\t\tname='HomeStackScreen'\r\n\t\t\t\t\tcomponent={HomeStackScreen}\r\n\t\t\t\t\toptions={{ headerShown: false }}\r\n\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack.Screen\r\n\t\t\t\t\tname='Login'\r\n\t\t\t\t\tcomponent={Login}\r\n\t\t\t\t\toptions={{ title: '로그인'}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack.Screen\r\n\t\t\t\t\tname='SignUp'\r\n\t\t\t\t\tcomponent={SignUp}\r\n\t\t\t\t\toptions={{ title: '회원가입' }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack.Screen \r\n\t\t\t\t\tname='FindUserInfo'\r\n\t\t\t\t\tcomponent={FindUserInfo}\r\n\t\t\t\t\toptions={{ title: 'ID/PW 찾기' }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack.Screen \r\n\t\t\t\t\tname='FindPW'\r\n\t\t\t\t\tcomponent={FindPW}\r\n\t\t\t\t\toptions={{ title: 'PW 찾기' }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack.Screen \r\n\t\t\t\t\tname='FindID'\r\n\t\t\t\t\tcomponent={FindID}\r\n\t\t\t\t\toptions={{ title: 'ID 찾기' }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack.Screen \r\n\t\t\t\t\tname=\"ChangePW\"\r\n\t\t\t\t\tcomponent={ChangePW}\r\n\t\t\t\t\tonption={{ title: 'PW 변경' }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack.Screen\r\n\t\t\t\t\tname='SearchPage'\r\n\t\t\t\t\tcomponent={SearchPage}\r\n\t\t\t\t\toptions={{ title: '검색 결과' }}\r\n\t\t\t\t/>\r\n\t\t\t</Stack.Navigator>\r\n\t\t</NavigationContainer>\r\n\t)\r\n}\r\n\r\nexport default StackNavigator;","import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { StatusBar } from 'expo-status-bar';\nimport StackNavigator from './navigations/StackNavigator';\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\n\nconst queryClient = new QueryClient();\n\nconst theme = {\n\t...DefaultTheme,\n\tdark: false,\n\tcolors: {\n\t\t...DefaultTheme.colors,\n\t\tpriamry: '#E84545',\n\t\taccent: '#E84545',\n\t\tbackground: '#FFFFFF',\n\t\ttext: '#000000',\n\t\tsurface: '#FFFFFF',\n\t\tonSurface: '#FFFFFF',\n\t\tbackdrop: '#FFFFFF',\n\t\tnotification: '#FFFFFF',\n\t}\n}\n\nexport default function App() {\n\treturn (\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<PaperProvider theme={theme}>\n\t\t\t\t<StackNavigator />\n\t\t\t\t<StatusBar style='black' />\n\t\t\t</PaperProvider>\n\t\t</QueryClientProvider>\n\t);\n}"],"sourceRoot":""}